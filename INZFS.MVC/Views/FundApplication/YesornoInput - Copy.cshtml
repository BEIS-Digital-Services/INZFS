
@model YesornoInputModel
@using INZFS.MVC.Models.DynamicForm
@using INZFS.MVC.TagHelpers

@if (!string.IsNullOrEmpty(Model.PreviousPageName))
{
    <a class="govuk-back-link" id="BackButton" asp-area="INZFS.MVC" asp-controller="FundApplication" asp-action="section" asp-route-pagename="@Model.PreviousPageName">
        Back to previous question
    </a>
}
else
{
<a class="govuk-back-link" id="BackButton" asp-area="INZFS.MVC" asp-controller="FundApplication" asp-action="section" asp-route-pagename="@Model.SectionInfo.Url">
    @Model.SectionInfo.Title
</a>
}
    <span class="govuk-caption-l">Question @Model.QuestionNumber of @Model.TotalQuestions</span>

<form asp-action="save" asp-route-pagename="@Model.PageName" method="post" enctype="multipart/form-data">

    <input type="hidden" name="PageName" value="@Model.PageName" />
    <input type="hidden" name="Kind" value="@nameof(YesornoInputModel)" />

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="govuk-error-summary">
            <h2 class="govuk-error-summary__title" id="error-summary-title">
                There is a problem
            </h2>
            <div class="govuk-error-summary__body">
                <ul class="govuk-list govuk-error-summary__list">
                    @foreach (var key in ViewData.ModelState.Keys)
                    {
                        var value = ViewData.ModelState[key];
                        foreach (var error in value.Errors)
                        {
                            <li>
                                <a href="#@Model.FieldName">@error.ErrorMessage</a>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    }

    <div class="govuk-form-group @(ViewData.ModelState.IsValid ? "" : "govuk-form-group--error")" asp-validation-error-class-for="@Model.Question">
        <label class="govuk-label govuk-label--l">
            @if (string.IsNullOrEmpty(Model.TitleQuestion))
            {
                @Model.Question

            }
            else
            {
                @Model.TitleQuestion
            }
        </label>
        @Html.Partial("_Hint", Model.Hint)
        <fieldset class="govuk-fieldset" aria-describedby="timing-hint">
            <div class="govuk-radios govuk-radios--inline" asp-validation-error-class-for="@Model.Question">
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="radio-yes" name="DataInput" type="radio" value=1
                       @if(Model.DataInput == "1")
                       {
                           <text>checked="checked"</text>
                       }
                       >
                    <label class="govuk-label govuk-radios__label">
                        Yes
                    </label>
                </div>
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="radio-no" name="DataInput" type="radio" value=0
                       @if(Model.DataInput == "0")
                       {
                           <text>checked="checked"</text>
                       }
                    >
                    <label class="govuk-label govuk-radios__label">
                        No
                    </label>
                </div>
            </div>
        </fieldset>
    </div>


    @Html.Partial("_Accordion", "")
    @if (Model.ShowMarkAsComplete)
    {
        @Html.Partial("_MarkAsComplete", Model)
    }

    <div class="edit-item-secondary group">
        <div class="edit-item-actions form-group">
            <button type="submit" id="SaveAndContinue" name="submit.Publish" class="btn btn-success publish govuk-button" value="submit.Publish">@Model.ContinueButtonText</button>
        </div>
    </div>
</form>

<a href="@Model.SectionUrl" id="returnToSummaryView">@Model.ReturnToSummaryPageLinkText</a>
