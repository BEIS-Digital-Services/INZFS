@using Microsoft.AspNetCore.Identity
@using OrchardCore.Entities
@using OrchardCore.Settings
@using OrchardCore.Users
@using OrchardCore.Users.Models
@model OrchardCore.Users.ViewModels.LoginViewModel
@inject SignInManager<IUser> SignInManager
@inject ISiteService SiteService
@inject UserManager<IUser> UserManager;
@{
    ViewLayout = "Layout__Login";

    var userCanRegister = (await SiteService.GetSiteSettingsAsync()).As<RegistrationSettings>().UsersCanRegister == UserRegistrationType.AllowRegistration;
    var allowResetPassword = (await SiteService.GetSiteSettingsAsync()).As<ResetPasswordSettings>().AllowResetPassword;
    var loginProviders = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToList();
    var disableLocalLogin = (await SiteService.GetSiteSettingsAsync()).As<LoginSettings>().DisableLocalLogin;
}

    @if (!disableLocalLogin)
    {
        <div  class="govuk-width-container">
            <form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="auth-form">
                <h1 class="govuk-heading-l">@T["Sign in"]</h1>
                <hr />
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="govuk-grid-row">
                    <div class="govuk-grid-column-one-half">
                        <div class="govuk-form-group">
                            <label class="govuk-label" asp-for="UserName">@T["Username or email address"]</label>
                            <input asp-for="UserName" class="govuk-input" autofocus tabindex="1"
                                    required="required"
                                    data-required-errormessage="Please enter your email address."
                                    data-email-errormessage="Please enter a valid email address."
                                   />
                            <span asp-validation-for="UserName" class="text-danger"></span>
                        </div>
                        <div class="govuk-form-group">
                            <label class="govuk-label" asp-for="Password">
                                @T["Password"]
                                @if (allowResetPassword)
                                {
                                    <a asp-controller="ResetPassword" asp-action="ForgotPassword" class="label-link">@T["Forgot your password?"]</a>
                                }
                            </label>
                            <div class="govuk-form-group input-group-append">
                                <input asp-for="Password" id="password" class="govuk-input" tabindex="2" 
                                      required="required"
                                      data-required-errormessage="Please enter a password."
                       
                                       />
                                <div class="input-group-append">
                                    <button tabindex="-1" class="govuk-button" type="button" id="togglePassword"><i class="icon fa fa-eye"></i></button>
                                </div>
                            </div>
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>
                        <div class="govuk-form-group custom-control custom-checkbox">
                            <input asp-for="RememberMe" class="custom-control-input" tabindex="3">
                            <label asp-for="RememberMe" class="custom-control-label">@T["Remember me"]</label>
                        </div>
                        <details class="govuk-details">
                            <summary class="govuk-details__summary"><span class="govuk-details__summary-text">Need help signing in or creating an account?</span></summary>
                            <div class="govuk-details__text">

                                <h2 class="govuk-heading-s">My email and/or password isn't working</h2>
                                <p class="govuk-body">If you applied previously using the old service, you will need to create a new account.</p>
                                <p class="govuk-body"><a class="govuk-link" href="/resetpassword">Forgotten your password?</a></p>
                                <h2 class="govuk-heading-s">I don't have an Innovation Funding Service Account</h2>
                                <p class="govuk-body">Please create a new account by visiting our <a class="govuk-link" href="/register">registration page</a>.</p>
                            </div>
                        </details>

                        <div>
                            <button type="submit" class="govuk-button" tabindex="4">@T["Sign in"]</button>
                        </div>
                        @await RenderSectionAsync("AfterLogin", required: false)


                        @if (userCanRegister)
                        {
                            <div class="govuk-body">
                                <a asp-controller="Registration" asp-action="Register" asp-route-returnurl="@ViewData["ReturnUrl"]">@T["Register as a new user"]</a>
                            </div>
                        }
                    </div>
                    </div>
            </form>
        </div>
    }
    @if (loginProviders.Count > 0)
    {
        <div class="col-md-6 @(disableLocalLogin ? "offset-md-3" : String.Empty)">
            <section>
                <h4>@T["Use another service to log in"]</h4>
                <hr />
                <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                    <div>
                        <p>
                            @foreach (var provider in loginProviders)
                            {
                                <button type="submit" class="govuk-button @(disableLocalLogin ? "w-100" : String.Empty)" name="provider" value="@provider.Name" title="@T["Log in using your {0} account", provider.DisplayName]">@provider.DisplayName</button>
                                @if (disableLocalLogin)
                                {
                                    <br />
                                }
                            }
                        </p>
                    </div>
                </form>
            </section>
        </div>
    }
 
    <script at="Foot">
    togglePassword = document.querySelector('#togglePassword');
    password = document.querySelector('#Password');

    togglePassword.addEventListener('click', function (e) {
        @* toggle the type attribute *@
        type = password.getAttribute('type') === 'password' ? 'text' : 'password';
        password.setAttribute('type', type);

        @* toggle the eye slash icon *@
        icon = this.getElementsByClassName('icon')[0];
        if (icon.getAttribute('data-icon')){ @* if the icon is rendered as a svg *@
            type === 'password' ? icon.setAttribute('data-icon', 'eye') : icon.setAttribute('data-icon', 'eye-slash');
        }
        else{ @* if the icon is still a <i> element *@
            type === 'password' ? icon.classList.remove('fa-eye-slash') : icon.classList.remove('fa-eye');
            type === 'password' ? icon.classList.add('fa-eye') : icon.classList.add('fa-eye-slash');
        }
    });
    </script>
